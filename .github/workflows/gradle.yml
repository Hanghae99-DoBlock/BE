# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "cicdTest" ]
  pull_request:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: do-github-actions-s3-bucket

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
        ## application.properties 파일 생성
    - name: make application.properties
      run: |
        echo ">> mkdir & touch"
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        touch ./application.properties
        echo ">> copy application.properties"
        echo "${{ secrets.PROPERTIES }}" >> ./application.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
        
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

    - name: Make zip file
      run: zip -r ./doblock.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./doblock.zip s3://$S3_BUCKET_NAME/

    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run:
        aws deploy create-deployment
        --application-name my-codedeploy-app
        --deployment-group-name my-codedeploy-deployment-group
        --file-exists-behavior OVERWRITE
        --s3-location bucket=do-github-actions-s3-bucket,bundleType=zip,key=doblock.zip
        --region ap-northeast-2
